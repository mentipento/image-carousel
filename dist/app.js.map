{"version":3,"file":"app.js","mappings":";;;;AAAA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,oBAAoB,WAAW;AAC/B;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;ACvDsB;AACwB;;AAE9C,YAAY;AACZ,oB","sources":["webpack:///./src/scripts/carousel.js","webpack:///./src/index.js"],"sourcesContent":["// carousel.js\n\nexport default function initCarousel() {\n  const btnRight = document.querySelector('.carousel__button--right');\n  const btnLeft = document.querySelector('.carousel__button--left');\n  const track = document.querySelector('.carousel__track');\n  const slides = document.querySelectorAll('.carousel__slide');\n  const indButtons = document.querySelectorAll('.carousel__indicator__button');\n\n  const updateIndicators = function updateIndicators(index) {\n    indButtons.forEach((indButton) => {\n      if (parseInt(indButton.dataset.id, 10) === index) {\n        indButton.textContent = '●';\n      } else {\n        indButton.textContent = '○';\n      }\n    });\n  };\n\n  const goToSlide = function goToSlide(index) {\n    const firstSlideIndex = parseInt(track.firstElementChild.dataset.id, 10);\n    let moves = index - firstSlideIndex;\n    if (moves < 0) {\n      moves = slides.length + moves; // rückwärts springen ermöglichen\n    }\n    for (let i = 0; i < moves; i += 1) {\n      const firstSlide = track.firstElementChild;\n      track.appendChild(firstSlide); // Erstes Element jeweils nach hinten schieben\n    }\n    updateIndicators(index);\n  };\n\n  btnRight.addEventListener('click', () => {\n    const currentIndex = parseInt(track.firstElementChild.dataset.id, 10);\n    const nextIndex = (currentIndex + 1) % slides.length;\n    goToSlide(nextIndex);\n  });\n\n  btnLeft.addEventListener('click', () => {\n    const currentIndex = parseInt(track.firstElementChild.dataset.id, 10);\n    const prevIndex = (currentIndex - 1 + slides.length) % slides.length;\n    goToSlide(prevIndex);\n  });\n\n  indButtons.forEach((button) => {\n    button.addEventListener('click', () => {\n      const targetIndex = parseInt(button.dataset.id, 10);\n      goToSlide(targetIndex);\n    });\n  });\n\n  const nextSlide = function nextSlide() {\n    btnRight.click();\n  };\n  setInterval(nextSlide, 5000);\n}\n","import './styles.css';\nimport initCarousel from './scripts/carousel';\n\ninitCarousel();\nconsole.log('test');"],"names":[],"sourceRoot":""}